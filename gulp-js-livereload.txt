const { src, dest, series, parallel, watch } = require('gulp');
const del = require('del');
const sourcemaps = require('gulp-sourcemaps');
const uglify = require('gulp-uglify');
const concat = require('gulp-concat');
const rename = require('gulp-rename');
const gulpCopy = require('gulp-copy');
const connect = require('gulp-connect');
const sass = require('gulp-sass');
sass.compiler = require('node-sass');

const origin = 'src';
const destination = 'build';

const sourceFiles = [`${origin}/fonts/**/*.{ttf,woff,eof,svg}`];

function folder (cb) {
    src(sourceFiles)
   .pipe(gulpCopy(destination, { prefix: 1 }))
   cb();
}

function images(cb) {
  src(`${origin}/img/**`)
  .pipe(dest(`${destination}/img`));
  cb();
}

async function clean(cb) {
    await del(destination);
    cb();
}

function html(cb) {
    src(`${origin}/*.html`)
    .pipe(dest(destination))
    .pipe(connect.reload());
    cb();
}

function css(cb) {
    src(`${origin}/scss/style.scss`)
    .pipe(sourcemaps.init())
    .pipe(sass({
        outputStyle: 'compact'
    }))
    .pipe(sourcemaps.write('./'))
    .pipe(dest(`${destination}/css`))
    .pipe(connect.reload());
    cb();
}

function js(cb) {
  src([
    `${origin}/js/lib/jquery.js`,
    `${origin}/js/main.js`,
  ])
  .pipe(concat('script.js'))
  .pipe(uglify())
  .pipe(rename('script.min.js'))
  .pipe(sourcemaps.init())
  .pipe(sourcemaps.write('./'))
  .pipe(dest(`${destination}/js`))
  .pipe(connect.reload());
  cb();
}

function watcher(cb) {
  watch(`${origin}/*.html`, html)
  watch(`${origin}/**/*.scss`, css)
  watch(`${origin}/**/*.js`, js)
}

function server(cb) {
  connect.server({
    root: destination,
    livereload: true
  });
  cb();
}

exports.default = series( clean, parallel(folder, images, html, css, js), server, watcher );

exports.folder = folder;
exports.clean = clean;
exports.images = images;